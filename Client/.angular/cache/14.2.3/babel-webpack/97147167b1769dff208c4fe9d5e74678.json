{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { ChannelActions } from 'src/app/store/channel';\nimport { ChannelSelector } from 'src/app/store/channel/channel.selector';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../chat-create/chat-create.component\";\nconst _c0 = [\"menu\"];\nconst _c1 = [\"expandButton\"];\n\nfunction ChatSidebarComponent_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 16);\n  }\n}\n\nfunction ChatSidebarComponent_img_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 17);\n  }\n}\n\nfunction ChatSidebarComponent_ng_container_4_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 26)(1, \"div\", 27)(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"span\", 28);\n    i0.ɵɵlistener(\"click\", function ChatSidebarComponent_ng_container_4_div_10_Template_span_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const channel_r8 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.setActiveChannel(channel_r8.name));\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const channel_r8 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(channel_r8.key);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(channel_r8.name);\n  }\n}\n\nfunction ChatSidebarComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 18)(2, \"span\");\n    i0.ɵɵtext(3, \"Channels\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 19);\n    i0.ɵɵlistener(\"click\", function ChatSidebarComponent_ng_container_4_Template_div_click_4_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.openModal());\n    });\n    i0.ɵɵelement(5, \"img\", 20);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 21);\n    i0.ɵɵelement(7, \"input\", 22)(8, \"img\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 24);\n    i0.ɵɵtemplate(10, ChatSidebarComponent_ng_container_4_div_10_Template, 6, 2, \"div\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.channels);\n  }\n}\n\nfunction ChatSidebarComponent_ng_container_6_ng_container_1_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const connectedUser_r16 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(connectedUser_r16);\n  }\n}\n\nfunction ChatSidebarComponent_ng_container_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 29);\n    i0.ɵɵlistener(\"click\", function ChatSidebarComponent_ng_container_6_ng_container_1_Template_div_click_1_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r17.openList());\n    });\n    i0.ɵɵelement(2, \"img\", 30);\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4, \"All Channels\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 31)(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 32)(11, \"h4\");\n    i0.ɵɵtext(12, \"MEMBERS\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 33)(14, \"p\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"span\");\n    i0.ɵɵtext(17, \"(you)\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(18, ChatSidebarComponent_ng_container_6_ng_container_1_div_18_Template, 2, 1, \"div\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const activeChannel_r14 = ctx.ngIf;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(activeChannel_r14.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activeChannel_r14.description);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r13.email, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r13.users);\n  }\n}\n\nfunction ChatSidebarComponent_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ChatSidebarComponent_ng_container_6_ng_container_1_Template, 19, 4, \"ng-container\", 4);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 1, ctx_r3.activeChannel$));\n  }\n}\n\nconst _c2 = function (a0) {\n  return {\n    \"sidebar--open\": a0\n  };\n};\n\nconst _c3 = function (a0) {\n  return {\n    \"sidebar-mobile__close--open\": a0\n  };\n};\n\nconst _c4 = function (a0) {\n  return {\n    \"menu--visible\": a0\n  };\n};\n\nexport class ChatSidebarComponent {\n  constructor(authService, store) {\n    this.authService = authService;\n    this.store = store;\n    this.email = '';\n    this.channels = [];\n    this.users = [];\n    this.isMenuOpen = false;\n    this.isSidebarMobileOpen = false;\n    this.isModalOpen = false;\n    this.activeChannel$ = this.store.select(ChannelSelector.selectActiveChannel);\n    this.isListOpen = false;\n  }\n\n  ngOnInit() {}\n\n  openMenu() {\n    this.isMenuOpen = !this.isMenuOpen;\n  }\n\n  openList() {\n    this.isListOpen = true;\n  }\n\n  toggleMenu(event) {\n    if (event.originalTarget !== this.expandButton.nativeElement && event.originalTarget !== this.menu.nativeElement) {\n      this.isMenuOpen = false;\n    }\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n\n  toggleSidebar() {\n    this.isSidebarMobileOpen = !this.isSidebarMobileOpen;\n  }\n\n  openModal() {\n    this.isModalOpen = true;\n  }\n\n  closeModal() {\n    this.isModalOpen = false;\n  }\n\n  setActiveChannel(channel) {\n    this.isListOpen = false;\n    this.store.dispatch(ChannelActions.setActiveChannel({\n      channelName: channel\n    }));\n  }\n\n}\n\nChatSidebarComponent.ɵfac = function ChatSidebarComponent_Factory(t) {\n  return new (t || ChatSidebarComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Store));\n};\n\nChatSidebarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatSidebarComponent,\n  selectors: [[\"app-chat-sidebar\"]],\n  viewQuery: function ChatSidebarComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menu = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.expandButton = _t.first);\n    }\n  },\n  hostBindings: function ChatSidebarComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function ChatSidebarComponent_click_HostBindingHandler($event) {\n        return ctx.toggleMenu($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  inputs: {\n    email: \"email\",\n    channels: \"channels\",\n    users: \"users\"\n  },\n  decls: 22,\n  vars: 17,\n  consts: [[1, \"sidebar\", 3, \"ngClass\"], [1, \"sidebar-mobile__close\", 3, \"ngClass\", \"click\"], [\"src\", \"/assets/close.svg\", \"alt\", \"\", 4, \"ngIf\"], [\"src\", \"/assets/menu.svg\", \"alt\", \"\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"sidebar__profile\"], [\"src\", \"\"], [\"src\", \"/assets/expand.svg\", 3, \"click\"], [\"expandButton\", \"\"], [1, \"menu\", 3, \"ngClass\"], [\"menu\", \"\"], [1, \"menu__item\"], [\"src\", \"/assets/account.svg\", \"alt\", \"\"], [1, \"menu__item\", \"menu__item--logout\", 3, \"click\"], [\"src\", \"/assets/logout.svg\", \"alt\", \"\"], [3, \"isOpen\", \"closeModal\"], [\"src\", \"/assets/close.svg\", \"alt\", \"\"], [\"src\", \"/assets/menu.svg\", \"alt\", \"\"], [1, \"sidebar__header\"], [1, \"header__img\", 3, \"click\"], [\"src\", \"/assets/add.svg\", \"alt\", \"\"], [1, \"sidebar__search-bar\"], [\"type\", \"text\", \"placeholder\", \"Search\"], [\"src\", \"/assets/search.svg\", \"alt\", \"\"], [1, \"sidebar__channels\"], [\"class\", \"channel\", 4, \"ngFor\", \"ngForOf\"], [1, \"channel\"], [1, \"key\"], [1, \"name\", 3, \"click\"], [1, \"sidebar__header\", \"sidebar__header--active\", 3, \"click\"], [\"src\", \"/assets/back.svg\", \"alt\", \"\"], [1, \"sidebar__content\"], [1, \"sidebar__members\"], [1, \"member\"], [\"class\", \"member\", 4, \"ngFor\", \"ngForOf\"]],\n  template: function ChatSidebarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵlistener(\"click\", function ChatSidebarComponent_Template_div_click_1_listener() {\n        return ctx.toggleSidebar();\n      });\n      i0.ɵɵtemplate(2, ChatSidebarComponent_img_2_Template, 1, 0, \"img\", 2);\n      i0.ɵɵtemplate(3, ChatSidebarComponent_img_3_Template, 1, 0, \"img\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, ChatSidebarComponent_ng_container_4_Template, 11, 1, \"ng-container\", 4);\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵtemplate(6, ChatSidebarComponent_ng_container_6_Template, 3, 3, \"ng-container\", 4);\n      i0.ɵɵelementStart(7, \"div\", 5);\n      i0.ɵɵelement(8, \"img\", 6);\n      i0.ɵɵelementStart(9, \"span\");\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"img\", 7, 8);\n      i0.ɵɵlistener(\"click\", function ChatSidebarComponent_Template_img_click_11_listener() {\n        return ctx.openMenu();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 9, 10)(15, \"div\", 11);\n      i0.ɵɵelement(16, \"img\", 12);\n      i0.ɵɵtext(17, \" My profile\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 13);\n      i0.ɵɵlistener(\"click\", function ChatSidebarComponent_Template_div_click_18_listener() {\n        return ctx.logout();\n      });\n      i0.ɵɵelement(19, \"img\", 14);\n      i0.ɵɵtext(20, \" Logout\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(21, \"app-chat-create\", 15);\n      i0.ɵɵlistener(\"closeModal\", function ChatSidebarComponent_Template_app_chat_create_closeModal_21_listener() {\n        return ctx.closeModal();\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c2, ctx.isSidebarMobileOpen));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c3, ctx.isSidebarMobileOpen));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSidebarMobileOpen);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSidebarMobileOpen);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isListOpen || !i0.ɵɵpipeBind1(5, 9, ctx.activeChannel$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isListOpen);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.email);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c4, ctx.isMenuOpen));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"isOpen\", ctx.isModalOpen);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i4.ChatCreateComponent, i3.AsyncPipe],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 689:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\\\\nSassError: expected \\\\\\\"+\\\\\\\", \\\\\\\"-\\\\\\\", \\\\\\\"*\\\\\\\", \\\\\\\"/\\\\\\\", or \\\\\\\")\\\\\\\".\\\\n    \\u2577\\\\n169 \\u2502                 width: calc(100% - (0px);\\\\r\\\\n    \\u2502                                         ^\\\\n    \\u2575\\\\n  src\\\\\\\\app\\\\\\\\components\\\\\\\\chat\\\\\\\\chat-sidebar\\\\\\\\chat-sidebar.component.scss 169:41  root stylesheet\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[689]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\"]\n});","map":{"version":3,"mappings":"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","names":["ElementRef","ChannelActions","ChannelSelector","i0","ChatSidebarComponent","constructor","authService","store","select","selectActiveChannel","ngOnInit","openMenu","isMenuOpen","openList","isListOpen","toggleMenu","event","originalTarget","expandButton","nativeElement","menu","logout","toggleSidebar","isSidebarMobileOpen","openModal","isModalOpen","closeModal","setActiveChannel","channel","dispatch","channelName","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\thomashamon_perso\\authentification\\src\\app\\components\\chat\\chat-sidebar\\chat-sidebar.component.ts","C:\\thomashamon_perso\\authentification\\src\\app\\components\\chat\\chat-sidebar\\chat-sidebar.component.html"],"sourcesContent":["import { Component, ElementRef, Host, HostListener, Input, OnInit, ViewChild } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ChannelActions } from 'src/app/store/channel';\nimport { ChannelSelector } from 'src/app/store/channel/channel.selector';\nimport { Channel } from 'src/app/store/channel/channel.state';\nimport { User } from 'src/app/store/user/user.state';\n\n@Component({\n  selector: 'app-chat-sidebar',\n  templateUrl: './chat-sidebar.component.html',\n  styleUrls: ['./chat-sidebar.component.scss']\n})\nexport class ChatSidebarComponent implements OnInit {\n\n  @Input() email? = ''; \n  @Input() channels? : {key:string | undefined, name : string | undefined}[] | null= [];\n  @Input() users : string[] = [];\n\n  @ViewChild('menu')\n  menu! : ElementRef;\n\n  @ViewChild('expandButton')\n  expandButton! : ElementRef;\n\n  isMenuOpen = false;\n  isSidebarMobileOpen = false;\n  isModalOpen = false;\n  activeChannel$ = this.store.select(ChannelSelector.selectActiveChannel);\n  isListOpen = false;\n\n  constructor(private authService : AuthService, private store : Store) { }\n\n  ngOnInit(): void {\n  }\n\n  openMenu() : void {\n    this.isMenuOpen = !this.isMenuOpen;\n  }\n\n  openList() : void {\n    this.isListOpen = true;\n  }\n\n  @HostListener('document:click', ['$event'])\n  toggleMenu(event : any ) : void {\n    if((event.originalTarget !== this.expandButton.nativeElement) && (event.originalTarget !== this.menu.nativeElement)) {\n        this.isMenuOpen = false;\n    }\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n\n  toggleSidebar() : void {\n    this.isSidebarMobileOpen = !this.isSidebarMobileOpen;\n  }\n\n  openModal() : void {\n    this.isModalOpen = true;\n  }\n\n  closeModal() : void {\n    this.isModalOpen = false;\n  }\n\n  setActiveChannel(channel : string | undefined) : void {\n    this.isListOpen = false;\n    this.store.dispatch(ChannelActions.setActiveChannel({channelName : channel as string}))\n  }\n}\n","<div class=\"sidebar\" [ngClass]=\"{'sidebar--open': isSidebarMobileOpen}\" >\n    <div class=\"sidebar-mobile__close\" [ngClass]=\"{'sidebar-mobile__close--open' : isSidebarMobileOpen}\" (click)=\"toggleSidebar()\">\n        <img *ngIf=\"isSidebarMobileOpen\" src=\"/assets/close.svg\" alt=\"\">\n        <img *ngIf=\"!isSidebarMobileOpen\" src=\"/assets/menu.svg\" alt=\"\">\n    </div>\n    <ng-container *ngIf=\"isListOpen || !(activeChannel$ | async) as activeChannel\">\n\n    <div class=\"sidebar__header\">\n       <span>Channels</span> \n\n        <div class=\"header__img\" (click)=\"openModal()\">\n            <img src=\"/assets/add.svg\" alt=\"\">\n        </div>\n    </div>\n    <div class=\"sidebar__search-bar\">\n        <input type=\"text\" placeholder=\"Search\">\n        <img src=\"/assets/search.svg\" alt=\"\">\n    </div>\n    <div class=\"sidebar__channels\">\n        <div class=\"channel\" *ngFor=\"let channel of channels\">\n            <div class=\"key\">\n             <span>{{channel.key}}</span>\n            </div>\n            <span class=\"name\" (click)=\"setActiveChannel(channel.name)\" >{{channel.name}}</span>\n        </div>\n    </div>\n\n\n</ng-container >\n<ng-container *ngIf=\"!isListOpen\">\n    <ng-container *ngIf=\"(activeChannel$ | async) as activeChannel\">\n        <div class=\"sidebar__header sidebar__header--active\" (click)=\"openList()\">\n            <img src=\"/assets/back.svg\" alt=\"\">\n            <span>All Channels</span> \n         </div>\n         <div class=\"sidebar__content\">\n            <span>{{activeChannel.name}}</span>\n            <p>{{activeChannel.description}}</p>\n         </div>\n         <div class=\"sidebar__members\">\n            <h4>MEMBERS</h4>\n            <div class=\"member\">\n              <p>   {{email}} </p> \n            <span>(you)</span></div>\n            <div class=\"member\" *ngFor=\"let connectedUser of users\">{{connectedUser}}</div>\n         </div>\n    </ng-container>\n</ng-container>\n\n<div class=\"sidebar__profile\">\n    <img src=\"\">\n    <span>{{email}}</span>\n    <img src=\"/assets/expand.svg\" (click)=\"openMenu()\" #expandButton>\n    <div class=\"menu\" #menu [ngClass]=\"{'menu--visible' : isMenuOpen}\">\n        <div class=\"menu__item\"><img src=\"/assets/account.svg\" alt=\"\"> My profile</div>\n        <div class=\"menu__item menu__item--logout\" (click)=\"logout()\"><img src=\"/assets/logout.svg\" alt=\"\"> Logout</div>\n    </div>\n</div>\n    <!--  -->\n</div>\n<app-chat-create [isOpen]=\"isModalOpen\" (closeModal)=\"closeModal()\"></app-chat-create>"]},"metadata":{},"sourceType":"module"}