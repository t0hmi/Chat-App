{"ast":null,"code":"import { first } from 'rxjs';\nimport { UserActions } from 'src/app/store/user';\nimport { UserSelector } from 'src/app/store/user/user.selector';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../chat-sidebar/chat-sidebar.component\";\n\nfunction ChatMainComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"app-chat-sidebar\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    isLogged: a0,\n    user: a1\n  };\n};\n\nexport class ChatMainComponent {\n  constructor(store, authService) {\n    this.store = store;\n    this.authService = authService;\n    this.user$ = this.store.select(UserSelector.selectLoggedUser);\n    this.isLogged$ = this.store.select(UserSelector.selectIsLoggedIn);\n  }\n\n  ngOnInit() {\n    this.store.select(UserSelector.selectIsLoggedIn).pipe(first()).subscribe(isLogged => {\n      console.log(isLogged);\n\n      if (!isLogged) {\n        this.store.dispatch(UserActions.tokenData());\n      }\n    });\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n\n}\n\nChatMainComponent.ɵfac = function ChatMainComponent_Factory(t) {\n  return new (t || ChatMainComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.AuthService));\n};\n\nChatMainComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatMainComponent,\n  selectors: [[\"app-chat-main\"]],\n  decls: 3,\n  vars: 8,\n  consts: [[4, \"ngIf\"]],\n  template: function ChatMainComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ChatMainComponent_ng_container_0_Template, 2, 0, \"ng-container\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵpipe(2, \"async\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpureFunction2(5, _c0, i0.ɵɵpipeBind1(1, 1, ctx.isLogged$), i0.ɵɵpipeBind1(2, 3, ctx.user$)));\n    }\n  },\n  dependencies: [i3.NgIf, i4.ChatSidebarComponent, i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjaGF0LW1haW4uY29tcG9uZW50LnNjc3MifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,KAAT,QAAsB,MAAtB;AAEA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,YAAT,QAA6B,kCAA7B;;;;;;;;;ICLAC;IAKIA;IAEJA;;;;;;;;;;;ADKA,OAAM,MAAOC,iBAAP,CAAwB;EAE5BC,YAAoBC,KAApB,EAA2CC,WAA3C,EAAoE;IAAhD;IAAuB;IAE3C,aAAQ,KAAKD,KAAL,CAAWE,MAAX,CAAkBN,YAAY,CAACO,gBAA/B,CAAR;IACA,iBAAY,KAAKH,KAAL,CAAWE,MAAX,CAAkBN,YAAY,CAACQ,gBAA/B,CAAZ;EAHyE;;EAKzEC,QAAQ;IACN,KAAKL,KAAL,CAAWE,MAAX,CAAkBN,YAAY,CAACQ,gBAA/B,EAAiDE,IAAjD,CAAsDZ,KAAK,EAA3D,EAA+Da,SAA/D,CAA0EC,QAAD,IAAa;MACpFC,OAAO,CAACC,GAAR,CAAYF,QAAZ;;MACA,IAAG,CAACA,QAAJ,EAAc;QACZ,KAAKR,KAAL,CAAWW,QAAX,CAAoBhB,WAAW,CAACiB,SAAZ,EAApB;MACD;IACF,CALD;EAMD;;EAEDC,MAAM;IACJ,KAAKZ,WAAL,CAAiBY,MAAjB;EACD;;AAlB2B;;;mBAAjBf,mBAAiBD;AAAA;;;QAAjBC;EAAiBgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ9BrB;;;;;;MAAeA","names":["first","UserActions","UserSelector","i0","ChatMainComponent","constructor","store","authService","select","selectLoggedUser","selectIsLoggedIn","ngOnInit","pipe","subscribe","isLogged","console","log","dispatch","tokenData","logout","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\thomashamon_perso\\authentification\\src\\app\\components\\chat\\chat-main\\chat-main.component.ts","C:\\thomashamon_perso\\authentification\\src\\app\\components\\chat\\chat-main\\chat-main.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { first } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UserActions } from 'src/app/store/user';\nimport { UserSelector } from 'src/app/store/user/user.selector';\n\n@Component({\n  selector: 'app-chat-main',\n  templateUrl: './chat-main.component.html',\n  styleUrls: ['./chat-main.component.scss']\n})\nexport class ChatMainComponent implements OnInit {\n\n  constructor(private store : Store, private authService : AuthService) { }\n\n  user$ = this.store.select(UserSelector.selectLoggedUser);\n  isLogged$ = this.store.select(UserSelector.selectIsLoggedIn);\n\n  ngOnInit(): void {\n    this.store.select(UserSelector.selectIsLoggedIn).pipe(first()).subscribe((isLogged) => {\n      console.log(isLogged)\n      if(!isLogged) {\n        this.store.dispatch(UserActions.tokenData());\n      }\n    });\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n\n}\n","<ng-container *ngIf=\"{\n    isLogged : isLogged$ | async,\n    user : user$ | async\n} as data\">\n    <!-- {{ data.user | json}} -->\n    <app-chat-sidebar></app-chat-sidebar>\n    <!-- <div class=\"logout\" (click)=\"logout()\">Logout</div> -->\n</ng-container>"]},"metadata":{},"sourceType":"module"}