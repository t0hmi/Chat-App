{"ast":null,"code":"// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\nimport { LogLevel } from \"./ILogger\";\nexport class XhrHttpClient extends HttpClient {\n  constructor(logger) {\n    super();\n    this._logger = logger;\n  }\n  /** @inheritDoc */\n\n\n  send(request) {\n    // Check that abort was not signaled before calling send\n    if (request.abortSignal && request.abortSignal.aborted) {\n      return Promise.reject(new AbortError());\n    }\n\n    if (!request.method) {\n      return Promise.reject(new Error(\"No method defined.\"));\n    }\n\n    if (!request.url) {\n      return Promise.reject(new Error(\"No url defined.\"));\n    }\n\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open(request.method, request.url, true);\n      xhr.withCredentials = request.withCredentials === undefined ? true : request.withCredentials;\n      xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\"); // Explicitly setting the Content-Type header for React Native on Android platform.\n\n      xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\n      const headers = request.headers;\n\n      if (headers) {\n        Object.keys(headers).forEach(header => {\n          xhr.setRequestHeader(header, headers[header]);\n        });\n      }\n\n      if (request.responseType) {\n        xhr.responseType = request.responseType;\n      }\n\n      if (request.abortSignal) {\n        request.abortSignal.onabort = () => {\n          xhr.abort();\n          reject(new AbortError());\n        };\n      }\n\n      if (request.timeout) {\n        xhr.timeout = request.timeout;\n      }\n\n      xhr.onload = () => {\n        if (request.abortSignal) {\n          request.abortSignal.onabort = null;\n        }\n\n        if (xhr.status >= 200 && xhr.status < 300) {\n          resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\n        } else {\n          reject(new HttpError(xhr.response || xhr.responseText || xhr.statusText, xhr.status));\n        }\n      };\n\n      xhr.onerror = () => {\n        this._logger.log(LogLevel.Warning, `Error from HTTP request. ${xhr.status}: ${xhr.statusText}.`);\n\n        reject(new HttpError(xhr.statusText, xhr.status));\n      };\n\n      xhr.ontimeout = () => {\n        this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\n\n        reject(new TimeoutError());\n      };\n\n      xhr.send(request.content || \"\");\n    });\n  }\n\n}","map":{"version":3,"names":["AbortError","HttpError","TimeoutError","HttpClient","HttpResponse","LogLevel","XhrHttpClient","constructor","logger","_logger","send","request","abortSignal","aborted","Promise","reject","method","Error","url","resolve","xhr","XMLHttpRequest","open","withCredentials","undefined","setRequestHeader","headers","Object","keys","forEach","header","responseType","onabort","abort","timeout","onload","status","statusText","response","responseText","onerror","log","Warning","ontimeout","content"],"sources":["C:/thomashamon_perso/authentification/node_modules/@microsoft/signalr/dist/esm/XhrHttpClient.js"],"sourcesContent":["// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nexport class XhrHttpClient extends HttpClient {\r\n    constructor(logger) {\r\n        super();\r\n        this._logger = logger;\r\n    }\r\n    /** @inheritDoc */\r\n    send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open(request.method, request.url, true);\r\n            xhr.withCredentials = request.withCredentials === undefined ? true : request.withCredentials;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n            const headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach((header) => {\r\n                    xhr.setRequestHeader(header, headers[header]);\r\n                });\r\n            }\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = () => {\r\n                    xhr.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n            xhr.onload = () => {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                }\r\n                else {\r\n                    reject(new HttpError(xhr.response || xhr.responseText || xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n            xhr.onerror = () => {\r\n                this._logger.log(LogLevel.Warning, `Error from HTTP request. ${xhr.status}: ${xhr.statusText}.`);\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n            xhr.ontimeout = () => {\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                reject(new TimeoutError());\r\n            };\r\n            xhr.send(request.content || \"\");\r\n        });\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}