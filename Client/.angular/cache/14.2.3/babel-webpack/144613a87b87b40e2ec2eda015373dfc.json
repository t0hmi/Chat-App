{"ast":null,"code":"import { first } from 'rxjs';\nimport { UserActions } from 'src/app/store/user';\nimport { UserSelector } from 'src/app/store/user/user.selector';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\n\nfunction ChatMainComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"json\");\n    i0.ɵɵelementStart(3, \"div\", 1);\n    i0.ɵɵtext(4, \"Logout\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const data_r1 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, data_r1.user), \" \");\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    isLogged: a0,\n    user: a1\n  };\n};\n\nexport class ChatMainComponent {\n  constructor(store) {\n    this.store = store;\n    this.user$ = this.store.select(UserSelector.selectLoggedUser);\n    this.isLogged$ = this.store.select(UserSelector.selectIsLoggedIn);\n  }\n\n  ngOnInit() {\n    this.store.select(UserSelector.selectIsLoggedIn).pipe(first()).subscribe(isLogged => {\n      console.log(isLogged);\n\n      if (!isLogged) {\n        this.store.dispatch(UserActions.tokenData());\n      }\n    });\n  }\n\n}\n\nChatMainComponent.ɵfac = function ChatMainComponent_Factory(t) {\n  return new (t || ChatMainComponent)(i0.ɵɵdirectiveInject(i1.Store));\n};\n\nChatMainComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatMainComponent,\n  selectors: [[\"app-chat-main\"]],\n  decls: 3,\n  vars: 8,\n  consts: [[4, \"ngIf\"], [1, \"logout\"]],\n  template: function ChatMainComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ChatMainComponent_ng_container_0_Template, 5, 3, \"ng-container\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵpipe(2, \"async\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpureFunction2(5, _c0, i0.ɵɵpipeBind1(1, 1, ctx.isLogged$), i0.ɵɵpipeBind1(2, 3, ctx.user$)));\n    }\n  },\n  dependencies: [i2.NgIf, i2.AsyncPipe, i2.JsonPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjaGF0LW1haW4uY29tcG9uZW50LnNjc3MifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,KAAT,QAAsB,MAAtB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,YAAT,QAA6B,kCAA7B;;;;;;;ICJAC;IAIIA;;IAEAA;IAAoBA;IAAMA;IAC9BA;;;;;IAHIA;IAAAA;;;;;;;;;;;ADOJ,OAAM,MAAOC,iBAAP,CAAwB;EAE5BC,YAAoBC,KAApB,EAAiC;IAAb;IAEpB,aAAQ,KAAKA,KAAL,CAAWC,MAAX,CAAkBL,YAAY,CAACM,gBAA/B,CAAR;IACA,iBAAY,KAAKF,KAAL,CAAWC,MAAX,CAAkBL,YAAY,CAACO,gBAA/B,CAAZ;EAHsC;;EAKtCC,QAAQ;IACN,KAAKJ,KAAL,CAAWC,MAAX,CAAkBL,YAAY,CAACO,gBAA/B,EAAiDE,IAAjD,CAAsDX,KAAK,EAA3D,EAA+DY,SAA/D,CAA0EC,QAAD,IAAa;MACpFC,OAAO,CAACC,GAAR,CAAYF,QAAZ;;MACA,IAAG,CAACA,QAAJ,EAAc;QACZ,KAAKP,KAAL,CAAWU,QAAX,CAAoBf,WAAW,CAACgB,SAAZ,EAApB;MACD;IACF,CALD;EAMD;;AAd2B;;;mBAAjBb,mBAAiBD;AAAA;;;QAAjBC;EAAiBc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX9BnB;;;;;;MAAeA","names":["first","UserActions","UserSelector","i0","ChatMainComponent","constructor","store","select","selectLoggedUser","selectIsLoggedIn","ngOnInit","pipe","subscribe","isLogged","console","log","dispatch","tokenData","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\thomashamon_perso\\authentification\\src\\app\\components\\chat\\chat-main\\chat-main.component.ts","C:\\thomashamon_perso\\authentification\\src\\app\\components\\chat\\chat-main\\chat-main.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { first } from 'rxjs';\nimport { UserActions } from 'src/app/store/user';\nimport { UserSelector } from 'src/app/store/user/user.selector';\n\n@Component({\n  selector: 'app-chat-main',\n  templateUrl: './chat-main.component.html',\n  styleUrls: ['./chat-main.component.scss']\n})\nexport class ChatMainComponent implements OnInit {\n\n  constructor(private store : Store) { }\n\n  user$ = this.store.select(UserSelector.selectLoggedUser);\n  isLogged$ = this.store.select(UserSelector.selectIsLoggedIn);\n\n  ngOnInit(): void {\n    this.store.select(UserSelector.selectIsLoggedIn).pipe(first()).subscribe((isLogged) => {\n      console.log(isLogged)\n      if(!isLogged) {\n        this.store.dispatch(UserActions.tokenData());\n      }\n    });\n  }\n\n}\n","<ng-container *ngIf=\"{\n    isLogged : isLogged$ | async,\n    user : user$ | async\n} as data\">\n    {{ data.user | json}}\n\n    <div class=\"logout\">Logout</div>\n</ng-container>"]},"metadata":{},"sourceType":"module"}